# -*- coding: utf-8 -*-
"""bank_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JA96BynWHJ_FYaj_0TPcgk_2EKL7q24F
"""



"""'''

Q1. (Create a program that fulfills the following specification.)

Program Specification

Use the prev. ANN model to predict if the customer with the following information will leave the bank: (Churn_Modelling.csv)

        Geography: France
        Credit Score: 600
        Gender: Male
        Age: 40 years old
        Tenure: 3 years
        Balance: $60000
        Number of Products: 2
        Does this customer have a credit card? Yes
        Is this customer an Active Member: Yes?
        Estimated Salary: $50000

So, should we say goodbye to that customer?

'''
"""

from google.colab import drive
drive.mount('/content/drive')

import os
os.getcwd()

os.chdir('/content/drive/My Drive/deep-learning/day27')

import pandas as pd
dataset = pd.read_csv("Churn_Modelling.csv")

dataset.shape

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""only use data not 

---

*italicized text*
"""

features = dataset.iloc[:, 3:13].values
labels = dataset.iloc[:, 13].values

"""hello"""

from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_features_1 = LabelEncoder()
features[:, 1] = labelencoder_features_1.fit_transform(features[:, 1])

labelencoder_features_2 = LabelEncoder()
features[:, 2] = labelencoder_features_2.fit_transform(features[:, 2])

onehotencoder = OneHotEncoder(categorical_features = [1])
features = onehotencoder.fit_transform(features).toarray()

features = features[:, 1:] #dummy variable trap

features[1]

"""'''we not take onehotencode becuse male and female is 1,0'''"""

from sklearn.model_selection import train_test_split
features_train,features_test,labels_train,labels_test=train_test_split(features,labels,random_state=0,test_size=0.2)

features_test.size
features_train.size

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
features_train = sc.fit_transform(features_train)
features_test = sc.transform(features_test)

# Importing the Keras libraries and packages
import keras
from keras.models import Sequential
from keras.layers import Dense

classifier = Sequential()

features.shape

#adding the first hidden layer
classifier.add(Dense(units = 6, kernel_initializer = 'uniform', activation = 'relu', input_dim = 11))
#we use no of hidden 2/3 of input feature and plus ouput labels
#here unit=6 means 6 nodes in first hidden layer

classifier.add(Dense(units = 6, kernel_initializer = 'uniform', activation = 'relu'))

# Adding the output layer
classifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))

# Compiling the ANN

classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])
#adam is lago in descent gradient to perform optimization like soring algo diff
classifier.fit(features_train, labels_train, batch_size = 10, epochs = 20)

labels_pred = classifier.predict(features_test)
labels_pred = (labels_pred > 0.5)

from sklearn.metrics import confusion_matrix,accuracy_score
cm=confusion_matrix(labels_pred,labels_test)
print("accuracy score of model=",accuracy_score(labels_pred,labels_test))

"""Geography: France
    Credit Score: 600
    Gender: Male
    Age: 40 years old
    Tenure: 3 years
    Balance: $60000








        Number of Products: 2
        Does this customer have a credit card? Yes
        Is this customer an Active Me

```
# This is formatted as code
```

mber: Yes?
        Estimated Salary: $*50000*
"""

dataset.head()

p=labelencoder_features_1.transform(['France'])
p

p= onehotencoder.transform(p)

